CREATE SCHEMA one_to_many;

CREATE TABLE director
(
    director_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(100) NOT NULL UNIQUE,
    age         INT CHECK ( age > 20 )
);

CREATE TABLE movie
(
    movie_id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_id        INT          NOT NULL REFERENCES director (director_id),
    name               VARCHAR(200) NOT NULL,
    year_of_production INT CHECK ( year_of_production > 1900 )
);

INSERT INTO director(name, age)
VALUES ('Quentin Tarantino', 57),
       ('Martin Scorsese', 78),
       ('Guy Ritchie', 52),
       ('Woody Allen', 85),
       ('David Lynch', 74),
       ('Christopher Nolan', 50);

SELECT *
FROM director;


INSERT INTO movie(director_id, name, year_of_production)
VALUES ((SELECT director_id FROM director where name = 'Quentin Tarantino'), 'Reservoir Dogs', 1992),
       ((SELECT director_id FROM director where name = 'Quentin Tarantino'), 'Pulp Fiction', 1994),
       ((SELECT director_id FROM director where name = 'Quentin Tarantino'), 'The Hateful Eight', 2005),
       ((SELECT director_id FROM director where name = 'Quentin Tarantino'), 'Once Upon a Time in Hollywood', 2019),
       ((SELECT director_id FROM director where name = 'Martin Scorsese'), 'Taxi Driver', 1976),
       ((SELECT director_id FROM director where name = 'Martin Scorsese'), 'Good Fellas', 1990),
       ((SELECT director_id FROM director where name = 'Martin Scorsese'), 'The Wolf of Wall Street', 2013),
       ((SELECT director_id FROM director where name = 'Guy Ritchie'), 'Lock, Stock and Two Smoking Barrels', 1998),
       ((SELECT director_id FROM director where name = 'Guy Ritchie'), 'Snatch', 2000),
       ((SELECT director_id FROM director where name = 'Woody Allen'), 'Midnight in Paris', 2011),
       ((SELECT director_id FROM director where name = 'Christopher Nolan'), 'Inception', 2010);


SELECT d.name "Director name", m.name "Movie name", m.year_of_production "Movie production year"
FROM director d
         JOIN movie m ON d.director_id = m.director_id;

SELECT d.name, m.name
FROM director d
         LEFT JOIN movie m ON d.director_id = m.director_id;





